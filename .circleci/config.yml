version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew clean lint testDebug --tests *.UnitTestSuite spotlessCheck
      - run:
          name: Generate Maven Artifacts
          command: ./gradlew install
  
  release_nexus:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: Create GPG Secret Key file from environment variable
          command: echo $GPG_SECRING_BASE64 | base64 --decode >> ~/secring.gpg
      - run:
          name: Create Gradle Proprerties config file from environment variable
          command: echo $GRADLE_SIGNING_PROPERTIES_BASE64 | base64 --decode >> ~/.gradle/gradle.properties
      - run:
          name: Validate the release tags and version numbers
          command: TAG=$CIRCLE_TAG ./scripts/validateRelease.sh
      - run:
          name: Release to Nexus
          command: ./gradlew clean build uploadArchives -PNEXUS_USERNAME=$NEXUS_USERNAME -PNEXUS_PASSWORD=$NEXUS_PASSWORD

workflows:
  version: 2
  build_and_release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - release_nexus:
          requires:
            - build
          filters:
            tags:
              only: /.*/ # allow anything because tag syntax is validated as part of validateRelease.sh
            branches:
              ignore: /.*/

